#BlueJ class context
comment0.target=RaceReport
comment0.text=\n\ RaceReport\ contains\ the\ writeReport\ method\ which\ prints\ out\ the\ results.\n\ Alex\ Lai\n\ Tuesday,\ November\ 26\ 2019\n
comment1.params=firstPlace\ secondPlace\ thirdPlace\ firstPlaceCount\ secondPlaceCount\ thirdPlaceCount
comment1.target=void\ writeReport(double,\ double,\ double,\ int,\ int,\ int)
comment1.text=\n\ The\ writeReport\ method\ will\ print\ out\ the\ top\ three\ finishers\ of\ the\ race,\ and\ it\ there\ are\ duplicates\:\ the\ program\ will\ output\ DUPLICATES\ that\ finished\ in\ the\ same\ position.\n\ However,\ for\ DUPLICATES,\ if\ there\ are\ to\ sets\ of\ duplicates\ for\ example\ (1st\ place\:\ 1,\ 1,\ 1|2nd\ place\:\ 2,\ 2,\ 2\ |\ 3rd\ Place\:\ 3,\ 3,\ 3,\ 3)-\ the\ program\ will\ only\ output\ the\n\ highest\ ranked\ duplicates....\ So\ for\ our\ example\ it\ will\ output\ "Three\ racers\ shared\ first\ place."\ If\ you\ were\ to\ give\ it\ a\ bunch\ of\ the\ same\ number\ like\ (1,\ 1,\ 1,\ 1,\ 1),\n\ the\ program\ will\ say\ that\ "5\ users\ shared\ first\ place."\ Also\ works\ for\ second\ and\ third\ place....\ vice\ versa.\ \n\ \n\ @param\ firstPlace\ -\ racer\ who\ scored\ the\ fastest\n\ @param\ secondPlace\ -\ racer\ who\ scored\ the\ second\ fastest,\ can\ be\ a\ duplicate\n\ @param\ thirdPlace\ -\ racer\ who\ scored\ the\ third\ fastest,\ can\ be\ a\ duplicate\n\ @param\ firstPlaceCount\ -\ final\ incremented\ value\ counting\ first\ place\ value\ repeats\n\ @param\ secondPlaceCount\ -\ final\ incremented\ value\ counting\ second\ place\ value\ repeats\n\ @param\ thirdPlaceCount)\ -\ final\ incremented\ value\ counting\ third\ place\ value\ repeats\n
numComments=2
